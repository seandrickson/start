@import "compass";

/*! main.scss */



///////////////
// VARIABLES //
///////////////

// Column + Gutter = 100%
$column-width: 80%;  // Column %
$gutter-width: 20%;  // Gutter %

$s-size: 32em;
$m-size: 56em;
$l-size: 80em;

$m-col-num: (2,3,4,5,3,4,4,3,5,4,4,5,5,5,4);
$l-col-num: (2,3,4,5,6,4,4,3,5,6,6,5,5,5,4);

///////////////
// FUNCTIONS //
///////////////

// Do math based on the grid (2 columns is /2, 3 columns is /3, etc.)
@function grid-math($column-width: 50%, $columns: 2) {
  @return $column-width / $columns;
}



////////////
// MIXINS //
////////////

// Trying not to repeat myself
@mixin grid($columns: 2) {
  width:   grid-math($column-width, $columns);
  padding: grid-math($gutter-width, $columns) / 2; // Divide by two, for padding on both sides
}

// Standard media query mixin
@mixin mq($size) {
  @media (min-width: $size) { @content; }
}

// Run through hand-picked column values based on the amount of icons, starting at 2 columns
@mixin icon-math($columns: 2) {
  $i: 2;
  @each $col in $columns {
    .grid__item--#{$i}up {
      @include grid($col);
    }
    $i: $i + 1;
  }
}



///////////////////////////////////
// Middle-aligned website layout //
// ----------------------------- //
// <html><body></html>           //
///////////////////////////////////

html {
  display: table; // OMG!! Not tables!
  width: 100%;
  height: 100%;
}

  body {
    display: table-cell;
    vertical-align: middle;
    color: #DDD;
    background-color: black;
    background-image: linear-gradient(
      black,
      lighten(black, 11%),
      lighten(black, 18%),
      lighten(black, 11%),
      black
    );
  }




///////////////////////////////////////////////////////////
// Grid component                                        //
// --------------                                        //
// <div class=grid__wrapper><div class=grid__item></div> //
///////////////////////////////////////////////////////////

// Set padding from edge of browser
.grid__wrapper {
  margin: 0 5%;
  max-width: $l-size;
  @include pie-clearfix;
  @include mq($s-size) { margin: 0 10%; }
  @include mq($m-size) { margin: 0 15%; }
  @include mq($l-size) { margin: 0 20%; }
}

  .grid__item {
    float: left;

    // Small size (no media query)
    @include grid;
  }

  // Medium size
  @include mq($m-size) { @include icon-math($m-col-num); }

  // Large size
  @include mq($l-size) { @include icon-math($l-col-num); }



//////////////////////////////////////////////////////////////////
// Icon component                                               //
// --------------                                               //
// <div class=icon__wrapper><a class=icon__item><img></a></div> //
//////////////////////////////////////////////////////////////////

.icon__wrapper {
  position: relative;
  perspective: 100px;
  backface-visibility: hidden;
}

  .icon__item {
    display: block;
    transform: translateZ(-7px);
    transition: .05s ease-in-out .015s;

    &:hover {
      transform: translateZ(0);
      img { box-shadow: 0 1em 2.5em -.2em #000; }
    }
    &:focus {
      outline: none;
      transform: translateZ(0);
      img { box-shadow: 0 0 2.5em -.2em #FFF; }
    }
    &:active {
      transform: translateZ(-7px);
      img { box-shadow: 0 1em 1.5em -.2em #000; }
    }

    img {
      max-width: 100%;
      vertical-align: top;
      border-radius: (27px / 120px) * 100%; // ~27px radius at 120x120px icon for iOS7
      outline: 1px solid transparent; // Firefox rendering fix
      box-shadow: 0 1em 2em -.2em #000;
    }
  }



///////////////
// Animation //
///////////////

.fadein {
  animation: fadeInDown 1s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  // Beizer value is ease-in-out-back: http://easings.net/#easeInOutBack
}

@keyframes fadeInDown {
    0% { top: -50px; opacity: 0; }
  100% { top:     0; opacity: 1; }
}
