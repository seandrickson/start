---
# Have Jekyll process the sass
---
/*! main.scss */



/////////////
// IMPORTS //
/////////////

@import "bourbon/bourbon";



///////////////
// VARIABLES //
///////////////

// Column + Gutter = 100%
$column-width: 80%;  // Column %
$gutter-width: 20%;  // Gutter %

$s-size: 32em;
$m-size: 56em;
$l-size: 80em;

$m-col-num: (2,3,4,5,3,4,4,3,5,4,4,5,5,5,4);
$l-col-num: (2,3,4,5,6,4,4,3,5,6,6,5,5,5,4);



///////////////
// FUNCTIONS //
///////////////

// Do math based on the grid (2 columns is /2, 3 columns is /3, etc.)
@function grid-math($column-width: 50%, $columns: 2) {
  @return $column-width / $columns;
}



////////////
// MIXINS //
////////////

// Trying not to repeat myself
@mixin grid($columns: 2) {
  width:   grid-math($column-width, $columns);
  padding: grid-math($gutter-width, $columns) / 2; // Divide by two, for padding on both sides
}

// Standard media query mixin
@mixin mq($size) {
  @media (min-width: $size) { @content; }
}

// Run through hand-picked column values based on the amount of icons, starting at 2 columns
@mixin icon-math($columns: 2) {
  $i: 2;
  @each $col in $columns {
    .grid__item--#{$i}up {
      @include grid($col);
    }
    $i: $i + 1;
  }
}



/////////////////////////////
// New general definitions //
/////////////////////////////

// focus styles applied to icons
a:focus { outline: none; }

// all images should be responsive
img {
  max-width: 100%;
  height: auto;
  vertical-align: top;
  outline: 1px solid transparent; // Firefox rendering fix
}



///////////////////////////////////
// Middle-aligned website layout //
///////////////////////////////////

html {
  display: table;
  width: 100%;
  height: 100%;
}

body {
  display: table-cell;
  vertical-align: middle;
  color: #DDD;
  background-color: #222;
  @include background-image( linear-gradient(
    black,
    rgba(black, .3),
    rgba(black, 0),
    rgba(black, 0),
    rgba(black, .3),
    black
  ) );
  // Set perspective for animation
  @include perspective( 100px );
  @include backface-visibility( hidden );
}



///////////////////////////////////////////////////////////
// Grid component                                        //
// --------------                                        //
// <div class=grid__wrapper><div class=grid__item></div> //
///////////////////////////////////////////////////////////

// Set margin from edge of browser
.grid__wrapper {
  margin: 0 5%;
  @include mq($s-size) { margin: 0 10%; }
  @include mq($m-size) { margin: 0 15%; }
  @include mq($l-size) { margin: 0 20%; }
  @include clearfix;
}

  .grid__item {
    float: left;

    // Small size (no media query)
    @include grid;
  }
  
  // Medium size
  @include mq($m-size) { @include icon-math($m-col-num); }

  // Large size
  @include mq($l-size) { @include icon-math($l-col-num); }



//////////////////////////////////////////////////////////////////
// Icon component                                               //
// --------------                                               //
// <div class=icon__wrapper><a class=icon__item><img></a></div> //
//////////////////////////////////////////////////////////////////

.icon__wrapper {
  // Set perspective for icon hover
  @include perspective( 100px );
  @include backface-visibility( hidden );
}

  .icon__item {
    img {
      // ~27px radius at 120x120px icon for iOS7
      border-radius: (27px / 120px) * 100%;
      box-shadow: 0 1em 2em -.2em rgba(black, .5);
      @include transform( translateZ(-7px) );
      @include transition( transform .07s );
    }

    &:hover img {
      box-shadow: 0 1em 2.5em -.2em rgba(black, .5);
      @include transform( translateZ(0) );
    }
    &:focus img {
      box-shadow: 0 0 2.5em -.2em rgba(white, .5);
      @include transform( translateZ(0) );
    }
    &:active img {
      box-shadow: 0 1em 1.5em -.2em rgba(black, .5);
      @include transform( translateZ(-7px) );
    }
  }



///////////////
// Animation //
///////////////
#fadein:not(.anim-fadein) {
  opacity: 0;
}

.anim-fadein {
  @include animation( fadeInDown 1s both );
}

@include keyframes (fadeInDown) {
  0% {
    @include transform( translateZ(100px) );
    opacity: 0;
  }
}
